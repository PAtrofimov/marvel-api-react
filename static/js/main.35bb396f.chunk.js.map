{"version":3,"sources":["components/Character.js","utils/utils.js","components/SearchBar.js","api/api.js","App.js","serviceWorker.js","index.js"],"names":["Character","props","name","image","modified","react_default","a","createElement","className","src","alt","DATE_FROM_DEFAULT","Date","DATE_TO_DEFAULT","localFormatDate","dateString","date","Intl","DateTimeFormat","format","formatDate","console","log","replace","SearchBar","_ref","handleSearch","handleFilter","handleSort","onSort","ev","_ev$target2","target","value","Object","defineProperty","placeholder","onChange","_ev$target","htmlFor","type","id","defaultChecked","elements","currentTarget","Array","from","reduce","acc","input","objectSpread","checked","defaultValue","getCharacters","asyncToGenerator","regenerator_default","mark","_callee","response","result","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","data","results","stop","apply","this","arguments","App","state","characters","sortName","filterByDateFrom","filterByDateTo","dateFrom","dateTo","isReady","runSorting","b","choicesSorting","asc","_this","desc","old","new","performSearch","setState","performSort","_ref2","performFilter","_ref3","map","character","thumbnail","path","extension","_this2","_this$state","filter","toUpperCase","includes","sort","components_SearchBar","components_Character","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.35bb396f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Character = props => {\r\n  const { name, image, modified } = props;\r\n  return (\r\n    <div className=\"character-wrapper\">\r\n      <div className=\"character\">\r\n        <img\r\n          className=\"character-image\"\r\n          src={image}\r\n          alt={name}\r\n        />\r\n        <h2 className=\"image-caption\">{name}</h2>\r\n        <p className=\"modified\">modified: {modified}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","export const DATE_FROM_DEFAULT = new Date(2010, 1, 1);\r\nexport const DATE_TO_DEFAULT = new Date(2020, 1, 1);\r\n\r\nexport const localFormatDate = dateString => {\r\n  const date =\r\n    typeof dateString === \"string\" ? new Date(dateString) : dateString;\r\n  return new Intl.DateTimeFormat().format(date);\r\n};\r\n\r\nexport const formatDate = date => {\r\n  console.log(new Intl.DateTimeFormat(\"sv-SE\").format(date).replace(\"/\", \"-\"));\r\n  return new Intl.DateTimeFormat(\"sv-SE\").format(date).replace(\"/\", \"-\");\r\n\r\n};\r\n","import React from \"react\";\r\nimport { DATE_FROM_DEFAULT, DATE_TO_DEFAULT, formatDate } from \"../utils/utils\";\r\n\r\nconst SearchBar = ({ handleSearch, handleFilter, handleSort }) => {\r\n \r\n  const onChange = ev => {\r\n    const { name, value } = ev.target;\r\n    handleSearch({ [name]: value });\r\n  };\r\n\r\n  const onSort = ev => {\r\n    const { name, value } = ev.target;\r\n    handleSort({ [name]: value });\r\n  };\r\n\r\n  const onFilter = ev => {\r\n    const { elements } = ev.currentTarget;\r\n    const value = Array.from(elements).reduce((acc, input) => {\r\n      if (input.name) {\r\n        return {\r\n          ...acc,\r\n          [input.name]:\r\n            input.type === \"checkbox\" ? input.checked : new Date(input.value)\r\n        };\r\n      }\r\n      return acc;\r\n    }, {});\r\n   handleFilter(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-form-wrapper\">\r\n      <div className=\"search-form\">\r\n        <input\r\n          placeholder=\"name\"\r\n          name=\"name\"\r\n          onChange={onChange}          \r\n        />\r\n       </div>\r\n\r\n      <fieldset>\r\n        <legend>Sort:</legend>\r\n        <label htmlFor=\"nameUp\">Asc</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sortName\"\r\n          id=\"nameUp\"\r\n          value=\"asc\"\r\n          defaultChecked\r\n          onChange={onSort}\r\n        />\r\n        <label htmlFor=\"nameDown\">Desc</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sortName\"\r\n          id=\"nameDown\"\r\n          value=\"desc\"\r\n          onChange={onSort}\r\n        />\r\n\r\n        <label htmlFor=\"oldest\">Old</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sortName\"\r\n          id=\"oldest\"\r\n          value=\"old\"\r\n          onChange={onSort}\r\n        />\r\n        <label htmlFor=\"newest\">New</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sortName\"\r\n          id=\"newest\"\r\n          value=\"new\"\r\n          onChange={onSort}\r\n        />\r\n      </fieldset>\r\n\r\n      <fieldset onChange={onFilter}>\r\n        <legend>Filter:</legend>\r\n        <div className=\"date-wrapper\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"filterByDateFrom\"\r\n            id=\"filterByDateFrom\"\r\n          />\r\n          <label htmlFor=\"dateFrom\" className=\"date-filter\">\r\n            From:\r\n          </label>\r\n        </div>\r\n        <input\r\n          type=\"date\"\r\n          name=\"dateFrom\"\r\n          id=\"dateFrom\"\r\n          defaultValue={formatDate(DATE_FROM_DEFAULT)}\r\n        />\r\n\r\n        <div className=\"date-wrapper\">\r\n          <input type=\"checkbox\" name=\"filterByDateTo\" id=\"filterByDateTo\" />\r\n          <label htmlFor=\"dateTo\" className=\"date-filter date-filter-to\">\r\n            To:\r\n          </label>\r\n        </div>\r\n        <input\r\n          type=\"date\"\r\n          name=\"dateTo\"\r\n          id=\"dateTo\"\r\n          defaultValue={formatDate(DATE_TO_DEFAULT)}\r\n        />\r\n      </fieldset>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","const API_KEY = \"3029b8b837f2853e0a5e2e41515fa904\";\r\nconst API_HASH = \"fe4d66e86f7b8a0b0215a9aedd064fed\";\r\n\r\nexport const getCharacters = async () => {\r\n \r\n  const response = await fetch(\r\n    `https://gateway.marvel.com/v1/public/series/1945/characters?ts=1&apikey=${API_KEY}&hash=${API_HASH}`\r\n  );\r\n  const result = await response.json();\r\n  return result.data.results;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Character from \"./components/Character\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport \"./App.css\";\r\nimport { getCharacters } from \"./api/api\";\r\nimport { DATE_FROM_DEFAULT, DATE_TO_DEFAULT, localFormatDate } from \"./utils/utils\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    characters: [],\r\n    name: \"\",\r\n    sortName: \"asc\",\r\n    filterByDateFrom: false,\r\n    filterByDateTo: false,\r\n    dateFrom: DATE_FROM_DEFAULT,\r\n    dateTo: DATE_TO_DEFAULT,\r\n    isReady: false\r\n  };\r\n\r\n  runSorting = (a, b) => (a > b ? 1 : -1);\r\n\r\n  choicesSorting = {\r\n    asc: (a, b) => this.runSorting(a.name, b.name),\r\n    desc: (a, b) => this.runSorting(b.name, a.name),\r\n    old: (a, b) => this.runSorting(a.modified, b.modified),\r\n    new: (a, b) => this.runSorting(b.modified, a.modified)\r\n  };\r\n  \r\n  async componentDidMount() {\r\n    let result = await getCharacters();\r\n    let characters = result.map(function(character) {\r\n      return {\r\n        id: character.id,\r\n        name: character.name,\r\n        image: `${character.thumbnail.path}.${character.thumbnail.extension}`,\r\n        modified: new Date(character.modified)\r\n      };\r\n    });\r\n    this.setState({ characters, isReady: true });\r\n  }\r\n\r\n  performSearch = ({ name }) => {\r\n    this.setState({ name });\r\n  };\r\n\r\n  performSort = ({ sortName }) => {\r\n    this.setState({ sortName });\r\n  };\r\n\r\n  performFilter = ({ filterByDateFrom, filterByDateTo, dateFrom, dateTo }) => {\r\n    this.setState({ filterByDateFrom, filterByDateTo, dateFrom, dateTo });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      characters,\r\n      name,\r\n      sortName,\r\n      filterByDateFrom,\r\n      filterByDateTo,\r\n      dateFrom,\r\n      dateTo,\r\n      isReady\r\n    } = this.state;\r\n\r\n    if (!isReady) {\r\n      return <div>Loading ...</div>;\r\n    }\r\n\r\n    let result =\r\n      name !== \"\"\r\n        ? characters.filter(character =>\r\n            character.name.toUpperCase().includes(name.toUpperCase())\r\n          )\r\n        : characters;\r\n\r\n    if (filterByDateFrom) {\r\n      result = result.filter(character => character.modified >= dateFrom);\r\n    }\r\n\r\n    if (filterByDateTo) {\r\n      result = result.filter(character => character.modified <= dateTo);\r\n    }\r\n          \r\n    result = result.sort((a, b) => this.choicesSorting[sortName](a, b));\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"sidebar\">\r\n          <SearchBar\r\n            handleSearch={this.performSearch}\r\n            handleSort={this.performSort}\r\n            handleFilter={this.performFilter}\r\n          />\r\n        </div>\r\n        <div className=\"characters\">\r\n          {result.map(character => (\r\n            <Character\r\n              key={character.id}\r\n              name={character.name}\r\n              image={character.image}\r\n              modified={localFormatDate(character.modified)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}