{"version":3,"sources":["components/Character.js","config.js","utils/utils.js","components/SearchBar.js","api/api.js","App.js","serviceWorker.js","index.js"],"names":["Character","props","name","image","modified","react_default","a","createElement","className","src","alt","DATE_FROM_DEFAULT","Date","DATE_TO_DEFAULT","convertDate","dateString","date","Intl","DateTimeFormat","format","formatDate","month","String","getMonth","padStart","day","getDate","getFullYear","join","SearchBar","_ref","handleSearch","handleFilter","handleSort","searchInput","React","createRef","onSort","ev","_ev$target2","target","value","Object","defineProperty","placeholder","onKeyUp","_ev$target","ref","onClick","_searchInput$current","current","htmlFor","type","id","defaultChecked","onChange","elements","currentTarget","Array","from","reduce","acc","input","objectSpread","checked","defaultValue","getCharacters","asyncToGenerator","regenerator_default","mark","_callee","response","result","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","data","results","stop","apply","this","arguments","App","state","characters","sortName","filterByDateFrom","filterByDateTo","dateFrom","dateTo","isReady","performSearch","_this","setState","performSort","_ref2","performFilter","_ref3","map","character","thumbnail","path","extension","_this$state","filter","toUpperCase","includes","runSorting","b","choicesSorting","asc","desc","old","new","sort","components_SearchBar","components_Character","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a73cb0ff.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Character = props => {\r\n  const { name, image, modified } = props;\r\n  return (\r\n    <div className=\"character-wrapper\">\r\n      <div className=\"character\">\r\n        <img\r\n          className=\"character-image\"\r\n          src={image}\r\n          alt={name}\r\n        />\r\n        <h2 className=\"image-caption\">{name}</h2>\r\n        <p className=\"modified\">modified: {modified}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","\r\nexport const DATE_FROM_DEFAULT = new Date(2010, 1, 1);\r\nexport const DATE_TO_DEFAULT = new Date(2020, 1, 1);","export const convertDate = dateString => {\r\n    const date = typeof dateString === \"string\" ? new Date(dateString) : dateString;\r\n    return new Intl.DateTimeFormat().format(date);\r\n  };\r\n\r\n  export const formatDate = date => {\r\n      const  month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n      const  day = String(date.getDate()).padStart(2, \"0\");\r\n      const  year = date.getFullYear();\r\n\r\n    return [year, month, day].join('-');\r\n}","import React from \"react\";\r\nimport { DATE_FROM_DEFAULT, DATE_TO_DEFAULT } from \"../config\";\r\nimport { formatDate } from \"../utils/utils\";\r\n\r\nconst SearchBar = ({ handleSearch, handleFilter, handleSort }) => {\r\n  const searchInput = React.createRef();\r\n\r\n  const onClick = ev => {\r\n    const { name, value } = searchInput.current;\r\n    handleSearch({ [name]: value });\r\n  };\r\n\r\n  const onKeyUp = ev => {\r\n    const { name, value } = ev.target;\r\n    handleSearch({ [name]: value });\r\n  };\r\n\r\n  const onSort = ev => {\r\n    const { name, value } = ev.target;\r\n    handleSort({ [name]: value });\r\n  };\r\n\r\n  const onFilter = ev => {\r\n    const { elements } = ev.currentTarget;\r\n    const value = Array.from(elements).reduce((acc, input) => {\r\n      if (input.name) {\r\n        return {\r\n          ...acc,\r\n          [input.name]:\r\n            input.type === \"checkbox\" ? input.checked : new Date(input.value)\r\n        };\r\n      }\r\n      return acc;\r\n    }, {});\r\n   handleFilter(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-form-wrapper\">\r\n      <div className=\"search-form\">\r\n        <input\r\n          placeholder=\"name\"\r\n          name=\"name\"\r\n          onKeyUp={onKeyUp}\r\n          ref={searchInput}\r\n        />\r\n        <button className=\"search-btn\" onClick={onClick}>\r\n          Search\r\n        </button>\r\n      </div>\r\n\r\n      <fieldset>\r\n        <legend>Sort:</legend>\r\n        <label htmlFor=\"nameUp\">Asc</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sortName\"\r\n          id=\"nameUp\"\r\n          value=\"asc\"\r\n          defaultChecked\r\n          onChange={onSort}\r\n        />\r\n        <label htmlFor=\"nameDown\">Desc</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sortName\"\r\n          id=\"nameDown\"\r\n          value=\"desc\"\r\n          onChange={onSort}\r\n        />\r\n\r\n        <label htmlFor=\"oldest\">Old</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sortName\"\r\n          id=\"oldest\"\r\n          value=\"old\"\r\n          onChange={onSort}\r\n        />\r\n        <label htmlFor=\"newest\">New</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sortName\"\r\n          id=\"newest\"\r\n          value=\"new\"\r\n          onChange={onSort}\r\n        />\r\n      </fieldset>\r\n\r\n      <fieldset onChange={onFilter}>\r\n        <legend>Filter:</legend>\r\n        <div className=\"date-wrapper\">\r\n          <input\r\n            type=\"checkbox\"\r\n            name=\"filterByDateFrom\"\r\n            id=\"filterByDateFrom\"\r\n          />\r\n          <label htmlFor=\"dateFrom\" className=\"date-filter\">\r\n            From:\r\n          </label>\r\n        </div>\r\n        <input\r\n          type=\"date\"\r\n          name=\"dateFrom\"\r\n          id=\"dateFrom\"\r\n          defaultValue={formatDate(DATE_FROM_DEFAULT)}\r\n        />\r\n\r\n        <div className=\"date-wrapper\">\r\n          <input type=\"checkbox\" name=\"filterByDateTo\" id=\"filterByDateTo\" />\r\n          <label htmlFor=\"dateTo\" className=\"date-filter date-filter-to\">\r\n            To:\r\n          </label>\r\n        </div>\r\n        <input\r\n          type=\"date\"\r\n          name=\"dateTo\"\r\n          id=\"dateTo\"\r\n          defaultValue={formatDate(DATE_TO_DEFAULT)}\r\n        />\r\n      </fieldset>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","const API_KEY = \"3029b8b837f2853e0a5e2e41515fa904\";\r\nconst API_HASH = \"fe4d66e86f7b8a0b0215a9aedd064fed\";\r\n\r\nexport const getCharacters = async () => {\r\n \r\n  const response = await fetch(\r\n    `https://gateway.marvel.com/v1/public/series/1945/characters?ts=1&apikey=${API_KEY}&hash=${API_HASH}`\r\n  );\r\n  const result = await response.json();\r\n  return result.data.results;\r\n};\r\n","import React, { Component } from \"react\";\nimport Character from \"./components/Character\";\nimport SearchBar from \"./components/SearchBar\";\nimport \"./App.css\";\nimport { getCharacters } from \"./api/api\";\nimport { DATE_FROM_DEFAULT, DATE_TO_DEFAULT } from \"./config\";\nimport { convertDate } from \"./utils/utils\";\n\nclass App extends Component {\n  state = {\n    characters: [],\n    name: \"\",\n    sortName: \"asc\",\n    filterByDateFrom: false,\n    filterByDateTo: false,\n    dateFrom: DATE_FROM_DEFAULT,\n    dateTo: DATE_TO_DEFAULT,\n    isReady: false\n  };\n\n  async componentDidMount() {\n    let result = await getCharacters();\n    let characters = result.map(function(character) {\n      return {\n        id: character.id,\n        name: character.name,\n        image: `${character.thumbnail.path}.${character.thumbnail.extension}`,\n        modified: new Date(character.modified)\n      };\n    });\n    this.setState({ characters, isReady: true });\n  }\n\n  performSearch = ({ name }) => {\n    this.setState({ name });\n  };\n\n  performSort = ({ sortName }) => {\n    this.setState({ sortName });\n  };\n\n  performFilter = ({ filterByDateFrom, filterByDateTo, dateFrom, dateTo }) => {\n    this.setState({ filterByDateFrom, filterByDateTo, dateFrom, dateTo });\n  };\n\n  render() {\n    const {\n      characters,\n      name,\n      sortName,\n      filterByDateFrom,\n      filterByDateTo,\n      dateFrom,\n      dateTo,\n      isReady\n    } = this.state;\n\n    if (!isReady) {\n      return <div>Loading ...</div>;\n    }\n\n    let result =\n      name !== \"\"\n        ? characters.filter(character =>\n            character.name.toUpperCase().includes(name.toUpperCase())\n          )\n        : characters;\n\n    if (filterByDateFrom) {\n      result = result.filter(character => character.modified >= dateFrom);\n    }\n\n    if (filterByDateTo) {\n      result = result.filter(character => character.modified <= dateTo);\n    }\n\n    const runSorting = (a, b) => (a > b ? 1 : -1);\n    const choicesSorting = {\n      asc: (a, b) => runSorting(a.name, b.name),\n      desc: (a, b) => runSorting(b.name, a.name),\n      old: (a, b) => runSorting(a.modified, b.modified),\n      new: (a, b) => runSorting(b.modified, a.modified)\n    };\n    result = result.sort((a, b) => choicesSorting[sortName](a, b));\n\n    return (\n      <div className=\"App\">\n        <div className=\"sidebar\">\n          <SearchBar\n            handleSearch={this.performSearch}\n            handleSort={this.performSort}\n            handleFilter={this.performFilter}\n          />\n        </div>\n        <div className=\"characters\">\n          {result.map(character => (\n            <Character\n              key={character.id}\n              name={character.name}\n              image={character.image}\n              modified={convertDate(character.modified)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}