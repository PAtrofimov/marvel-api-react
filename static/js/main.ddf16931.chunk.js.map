{"version":3,"sources":["components/Characters.js","components/SearchBar.js","api/api.js","App.js","serviceWorker.js","index.js"],"names":["Characters","props","console","log","name","image","modified","react_default","a","createElement","className","SearchBar","_ref","handleSearch","handleFilter","handleSort","onSort","ev","_ev$target2","target","value","Object","defineProperty","onSubmit","elements","preventDefault","Array","from","reduce","acc","input","objectSpread","onChange","_ev$target","placeholder","type","htmlFor","id","defaultChecked","currentTarget","curtarget","checked","defaultValue","getCharactersList","asyncToGenerator","regenerator_default","mark","_callee","response","result","wrap","_context","prev","next","fetch","concat","sent","json","abrupt","data","results","stop","apply","this","arguments","Name","Image","_ref2","path","extension","src","alt","App","state","charactersList","sortName","filterDateFrom","filterDateTo","dateFrom","dateTo","ready","performSearch","_ref3","_this","setState","performSort","_ref4","performFilter","_ref5","_this$state","formatDate","dateString","date","Date","Intl","DateTimeFormat","format","filter","characters","toUpperCase","includes","parse","sort","b","components_SearchBar","map","components_Characters","assign","key","App_Name","App_Image","thumbnail","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.ddf16931.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Characters = props => {\r\n  console.log({ props });\r\n\r\n  const { name, image, modified } = props;\r\n  return (\r\n    <div className=\"characters-wrapper\">\r\n      <div className=\"characters\">\r\n        <div className=\"image\">{image}</div>\r\n        <div className=\"image-caption\">{name}</div>\r\n        <div className=\"modified\">modified: {modified}</div>\r\n      </div>\r\n      <div />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Characters;\r\n","import React from \"react\";\r\n\r\nconst SearchBar = ({ handleSearch, handleFilter, handleSort }) => {\r\n  const onSubmit = ev => {\r\n    const { elements } = ev.target;\r\n\r\n    ev.preventDefault();\r\n\r\n    const value = Array.from(elements).reduce((acc, input) => {\r\n      if (input.name) {\r\n        return { ...acc, [input.name]: input.value };\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    handleSearch(value);\r\n  };\r\n\r\n  const onChange = ev => {\r\n    const { name, value } = ev.target;\r\n    console.log({ [name]: value });\r\n    handleSearch({ [name]: value });\r\n  };\r\n\r\n  const onSort = ev => {\r\n    const { name, value } = ev.target;\r\n    console.log({ [name]: value });\r\n    handleSort({ [name]: value });\r\n  };\r\n\r\n  const onFilter = ev => {\r\n    const { elements } = ev.currentTarget;\r\n    console.log(\"hy, \", { target: ev.target }, { curtarget: ev.currentTarget });\r\n    const value = Array.from(elements).reduce((acc, input) => {\r\n      if (input.name) {\r\n        return {\r\n          ...acc,\r\n          [input.name]: input.type === \"checkbox\" ? input.checked : input.value\r\n        };\r\n      }\r\n      return acc;\r\n    }, {});\r\n\r\n    console.log({ value });\r\n    handleFilter(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-form-wrapper\">\r\n      <form className=\"search-form\" onSubmit={onSubmit} onChange={onChange}>\r\n        <input placeholder=\"name\" name=\"name\" />\r\n        <button type=\"submit\" className=\"search-btn\">\r\n          Search\r\n        </button>\r\n      </form>\r\n\r\n      <fieldset>\r\n        <legend>Sort:</legend>\r\n        <label htmlFor=\"nameUp\">Asc</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sortName\"\r\n          id=\"nameUp\"\r\n          value=\"asc\"\r\n          defaultChecked={true}\r\n          onChange={onSort}\r\n        />\r\n        <label htmlFor=\"nameDown\">Desc</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sortName\"\r\n          id=\"nameDown\"\r\n          value=\"desc\"\r\n          onChange={onSort}\r\n        />\r\n\r\n        <label htmlFor=\"oldest\">Old</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sortName\"\r\n          id=\"oldest\"\r\n          value=\"old\"\r\n          onChange={onSort}\r\n        />\r\n        <label htmlFor=\"newest\">New</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"sortName\"\r\n          id=\"newest\"\r\n          value=\"new\"\r\n          onChange={onSort}\r\n        />\r\n      </fieldset>\r\n\r\n      <fieldset onChange={onFilter}>\r\n        <legend>Filter:</legend>\r\n        <div className=\"date-wrapper\">\r\n          <input type=\"checkbox\" name=\"filterDateFrom\" id=\"filter-from\" />\r\n          <label htmlFor=\"dateFrom\" className=\"date-filter\">\r\n            From:\r\n          </label>\r\n        </div>\r\n        <input\r\n          type=\"date\"\r\n          name=\"dateFrom\"\r\n          id=\"dateFrom\"\r\n          defaultValue=\"2010-01-01\"\r\n        />\r\n\r\n        <div className=\"date-wrapper\">\r\n          <input type=\"checkbox\" name=\"filterDateTo\" id=\"filterDateTo\" />\r\n          <label htmlFor=\"dateTo\" className=\"date-filter date-filter-to\">\r\n            To:\r\n          </label>\r\n        </div>\r\n        <input\r\n          type=\"date\"\r\n          name=\"dateTo\"\r\n          id=\"dateTo\"\r\n          defaultValue=\"2100-01-01\"\r\n        />\r\n      </fieldset>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","const API_KEY = \"3029b8b837f2853e0a5e2e41515fa904\";\r\nconst API_HASH = \"fe4d66e86f7b8a0b0215a9aedd064fed\";\r\n\r\nexport const getCharactersList = async () => {\r\n \r\n  const response = await fetch(\r\n    `http://gateway.marvel.com/v1/public/series/1945/characters?ts=1&apikey=${API_KEY}&hash=${API_HASH}`\r\n  );\r\n  const result = await response.json();\r\n  return result.data.results;\r\n};\r\n","import React, { Component } from \"react\";\nimport Characters from \"./components/Characters\";\nimport SearcBar from \"./components/SearchBar\";\nimport \"./App.css\";\nimport { getCharactersList } from \"./api/api\";\n\nconst Name = ({ name }) => {\n  return <h2>{name}</h2>;\n};\n\nconst Image = ({ path, extension, name }) => {\n  return (\n    <img\n      className=\"characters-image\"\n      src={`${path}.${extension}`}\n      alt={name}    />\n  );\n};\n\nclass App extends Component {\n  state = {\n    charactersList: [],\n    name: \"\",\n    sortName: \"asc\",\n    filterDateFrom: false,\n    filterDateTo: false,\n    dateFrom: \"2010-01-01\",\n    dateTo: \"2020-01-01\",\n    ready: false,\n  };\n\n  async componentDidMount() {\n    const charactersList = await getCharactersList();\n    const ready = true;\n    console.log({ charactersList });\n    this.setState({ charactersList, ready });\n  }\n\n  performSearch = ({ name }) => {\n    this.setState({ name });\n  };\n\n  performSort = ({ sortName }) => {\n    this.setState({ sortName });\n  };\n\n  performFilter = ({ filterDateFrom, filterDateTo, dateFrom, dateTo }) => {\n    this.setState({ filterDateFrom, filterDateTo, dateFrom, dateTo });\n  };\n\n  render() {\n    const {\n      charactersList,\n      name,\n      sortName,\n      filterDateFrom,\n      filterDateTo,\n      dateFrom,\n      dateTo,\n      ready\n    } = this.state;\n\n    if (!ready) {\n      return <div>Loading ...</div>;\n    }\n\n    const formatDate = dateString => {\n      const date = new Date(dateString);\n      return new Intl.DateTimeFormat().format(date);\n    };\n\n    debugger;\n\n    let result = name\n      ? charactersList.filter(characters =>\n          characters.name.toUpperCase().includes(name.toUpperCase())\n        )\n      : charactersList;\n\n    if (filterDateFrom) {\n      result = result.filter(\n        characters => Date.parse(characters.modified) >= Date.parse(dateFrom)\n      );\n    }\n\n    if (filterDateTo) {\n      result = result.filter(\n        characters => Date.parse(characters.modified) <= Date.parse(dateTo)\n      );\n    }\n\n    switch (sortName) {\n      case \"asc\":\n        result = result.sort((a, b) => (a.name > b.name ? 1 : -1));\n        break;\n      case \"desc\":\n        result = result.sort((a, b) => (b.name > a.name ? 1 : -1));\n        break;\n      case \"old\":\n        result = result.sort((a, b) =>\n          Date.parse(a.modified) >= Date.parse(b.modified) ? 1 : -1\n        );\n        break;\n      case \"new\":\n        result = result.sort((a, b) =>\n          Date.parse(b.modified) >= Date.parse(a.modified) ? 1 : -1\n        );\n        break;\n      default:\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"sideBar\">\n          <SearcBar\n            handleSearch={this.performSearch}\n            handleSort={this.performSort}\n            handleFilter={this.performFilter}\n          />\n        </div>\n        <div className=\"charactersList\">\n          {result.map(characters => (\n            <Characters\n              key={characters.id}\n              {...characters}\n              name={<Name name={characters.name} />}\n              image={<Image {...characters.thumbnail} name= {characters.name} />}\n              modified={formatDate(characters.modified)}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}